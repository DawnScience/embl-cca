/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iucr.cbflib;

public class sizetP {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public sizetP(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(sizetP obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        cbfJNI.delete_sizetP(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public sizetP() {
    this(cbfJNI.new_sizetP(), true);
  }

  public void assign(long value) {
    cbfJNI.sizetP_assign(swigCPtr, this, value);
  }

  public long value() {
    return cbfJNI.sizetP_value(swigCPtr, this);
  }

  public SWIGTYPE_p_size_t cast() {
    long cPtr = cbfJNI.sizetP_cast(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_size_t(cPtr, false);
  }

  public static sizetP frompointer(SWIGTYPE_p_size_t t) {
    long cPtr = cbfJNI.sizetP_frompointer(SWIGTYPE_p_size_t.getCPtr(t));
    return (cPtr == 0) ? null : new sizetP(cPtr, false);
  }

}
