/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.iucr.cbflib;

public class cbf implements cbfConstants {
  public static SWIGTYPE_p_p_char new_charPP() {
    long cPtr = cbfJNI.new_charPP();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static SWIGTYPE_p_p_char copy_charPP(String value) {
    long cPtr = cbfJNI.copy_charPP(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public static void delete_charPP(SWIGTYPE_p_p_char self) {
    cbfJNI.delete_charPP(SWIGTYPE_p_p_char.getCPtr(self));
  }

  public static void charPP_assign(SWIGTYPE_p_p_char self, String value) {
    cbfJNI.charPP_assign(SWIGTYPE_p_p_char.getCPtr(self), value);
  }

  public static String charPP_value(SWIGTYPE_p_p_char self) {
    return cbfJNI.charPP_value(SWIGTYPE_p_p_char.getCPtr(self));
  }

  public static SWIGTYPE_p_void int_void(SWIGTYPE_p_int x) {
    long cPtr = cbfJNI.int_void(SWIGTYPE_p_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void double_void(SWIGTYPE_p_double x) {
    long cPtr = cbfJNI.double_void(SWIGTYPE_p_double.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int cbf_read_file(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int flags) {
    return cbfJNI.cbf_read_file(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), flags);
  }

  public static int cbf_read_widefile(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int flags) {
    return cbfJNI.cbf_read_widefile(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), flags);
  }

  public static int cbf_read_buffered_file(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int flags, String buffer, long buffer_len) {
    return cbfJNI.cbf_read_buffered_file(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), flags, buffer, buffer_len);
  }

  public static int cbf_write_file(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int isbuffer, int ciforcbf, int headers, int encoding) {
    return cbfJNI.cbf_write_file(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), isbuffer, ciforcbf, headers, encoding);
  }

  public static int cbf_write_local_file(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int isbuffer, int ciforcbf, int headers, int encoding) {
    return cbfJNI.cbf_write_local_file(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), isbuffer, ciforcbf, headers, encoding);
  }

  public static int cbf_write_widefile(cbf_handle_struct handle, SWIGTYPE_p_FILE stream, int isbuffer, int ciforcbf, int headers, int encoding) {
    return cbfJNI.cbf_write_widefile(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_FILE.getCPtr(stream), isbuffer, ciforcbf, headers, encoding);
  }

  public static int cbf_new_datablock(cbf_handle_struct handle, String datablockname) {
    return cbfJNI.cbf_new_datablock(cbf_handle_struct.getCPtr(handle), handle, datablockname);
  }

  public static int cbf_new_saveframe(cbf_handle_struct handle, String saveframename) {
    return cbfJNI.cbf_new_saveframe(cbf_handle_struct.getCPtr(handle), handle, saveframename);
  }

  public static int cbf_force_new_datablock(cbf_handle_struct handle, String datablockname) {
    return cbfJNI.cbf_force_new_datablock(cbf_handle_struct.getCPtr(handle), handle, datablockname);
  }

  public static int cbf_force_new_saveframe(cbf_handle_struct handle, String saveframename) {
    return cbfJNI.cbf_force_new_saveframe(cbf_handle_struct.getCPtr(handle), handle, saveframename);
  }

  public static int cbf_new_category(cbf_handle_struct handle, String categoryname) {
    return cbfJNI.cbf_new_category(cbf_handle_struct.getCPtr(handle), handle, categoryname);
  }

  public static int cbf_force_new_category(cbf_handle_struct handle, String categoryname) {
    return cbfJNI.cbf_force_new_category(cbf_handle_struct.getCPtr(handle), handle, categoryname);
  }

  public static int cbf_new_column(cbf_handle_struct handle, String columnname) {
    return cbfJNI.cbf_new_column(cbf_handle_struct.getCPtr(handle), handle, columnname);
  }

  public static int cbf_new_row(cbf_handle_struct handle) {
    return cbfJNI.cbf_new_row(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_insert_row(cbf_handle_struct handle, int rownumber) {
    return cbfJNI.cbf_insert_row(cbf_handle_struct.getCPtr(handle), handle, rownumber);
  }

  public static int cbf_delete_row(cbf_handle_struct handle, int rownumber) {
    return cbfJNI.cbf_delete_row(cbf_handle_struct.getCPtr(handle), handle, rownumber);
  }

  public static int cbf_set_datablockname(cbf_handle_struct handle, String datablockname) {
    return cbfJNI.cbf_set_datablockname(cbf_handle_struct.getCPtr(handle), handle, datablockname);
  }

  public static int cbf_set_saveframename(cbf_handle_struct handle, String saveframename) {
    return cbfJNI.cbf_set_saveframename(cbf_handle_struct.getCPtr(handle), handle, saveframename);
  }

  public static int cbf_reset_datablocks(cbf_handle_struct handle) {
    return cbfJNI.cbf_reset_datablocks(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_reset_datablock(cbf_handle_struct handle) {
    return cbfJNI.cbf_reset_datablock(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_reset_saveframe(cbf_handle_struct handle) {
    return cbfJNI.cbf_reset_saveframe(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_reset_category(cbf_handle_struct handle) {
    return cbfJNI.cbf_reset_category(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_remove_datablock(cbf_handle_struct handle) {
    return cbfJNI.cbf_remove_datablock(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_remove_saveframe(cbf_handle_struct handle) {
    return cbfJNI.cbf_remove_saveframe(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_remove_category(cbf_handle_struct handle) {
    return cbfJNI.cbf_remove_category(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_remove_column(cbf_handle_struct handle) {
    return cbfJNI.cbf_remove_column(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_remove_row(cbf_handle_struct handle) {
    return cbfJNI.cbf_remove_row(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_rewind_datablock(cbf_handle_struct handle) {
    return cbfJNI.cbf_rewind_datablock(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_rewind_category(cbf_handle_struct handle) {
    return cbfJNI.cbf_rewind_category(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_rewind_saveframe(cbf_handle_struct handle) {
    return cbfJNI.cbf_rewind_saveframe(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_rewind_blockitem(cbf_handle_struct handle, SWIGTYPE_p_CBF_NODETYPE type) {
    return cbfJNI.cbf_rewind_blockitem(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_CBF_NODETYPE.getCPtr(type));
  }

  public static int cbf_rewind_column(cbf_handle_struct handle) {
    return cbfJNI.cbf_rewind_column(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_rewind_row(cbf_handle_struct handle) {
    return cbfJNI.cbf_rewind_row(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_next_datablock(cbf_handle_struct handle) {
    return cbfJNI.cbf_next_datablock(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_next_saveframe(cbf_handle_struct handle) {
    return cbfJNI.cbf_next_saveframe(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_next_category(cbf_handle_struct handle) {
    return cbfJNI.cbf_next_category(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_next_blockitem(cbf_handle_struct handle, SWIGTYPE_p_CBF_NODETYPE type) {
    return cbfJNI.cbf_next_blockitem(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_CBF_NODETYPE.getCPtr(type));
  }

  public static int cbf_next_column(cbf_handle_struct handle) {
    return cbfJNI.cbf_next_column(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_next_row(cbf_handle_struct handle) {
    return cbfJNI.cbf_next_row(cbf_handle_struct.getCPtr(handle), handle);
  }

  public static int cbf_find_datablock(cbf_handle_struct handle, String datablockname) {
    return cbfJNI.cbf_find_datablock(cbf_handle_struct.getCPtr(handle), handle, datablockname);
  }

  public static int cbf_find_saveframe(cbf_handle_struct handle, String saveframe) {
    return cbfJNI.cbf_find_saveframe(cbf_handle_struct.getCPtr(handle), handle, saveframe);
  }

  public static int cbf_find_category(cbf_handle_struct handle, String categoryname) {
    return cbfJNI.cbf_find_category(cbf_handle_struct.getCPtr(handle), handle, categoryname);
  }

  public static int cbf_find_column(cbf_handle_struct handle, String columnname) {
    return cbfJNI.cbf_find_column(cbf_handle_struct.getCPtr(handle), handle, columnname);
  }

  public static int cbf_find_row(cbf_handle_struct handle, String value) {
    return cbfJNI.cbf_find_row(cbf_handle_struct.getCPtr(handle), handle, value);
  }

  public static int cbf_require_row(cbf_handle_struct handle, String value) {
    return cbfJNI.cbf_require_row(cbf_handle_struct.getCPtr(handle), handle, value);
  }

  public static int cbf_find_nextrow(cbf_handle_struct handle, String value) {
    return cbfJNI.cbf_find_nextrow(cbf_handle_struct.getCPtr(handle), handle, value);
  }

  public static int cbf_require_nextrow(cbf_handle_struct handle, String value) {
    return cbfJNI.cbf_require_nextrow(cbf_handle_struct.getCPtr(handle), handle, value);
  }

  public static int cbf_count_datablocks(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int datablocks) {
    return cbfJNI.cbf_count_datablocks(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(datablocks));
  }

  public static int cbf_count_saveframes(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int saveframes) {
    return cbfJNI.cbf_count_saveframes(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(saveframes));
  }

  public static int cbf_count_categories(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int categories) {
    return cbfJNI.cbf_count_categories(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(categories));
  }

  public static int cbf_count_blockitems(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int blockitems) {
    return cbfJNI.cbf_count_blockitems(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(blockitems));
  }

  public static int cbf_count_columns(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int columns) {
    return cbfJNI.cbf_count_columns(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(columns));
  }

  public static int cbf_count_rows(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int rows) {
    return cbfJNI.cbf_count_rows(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(rows));
  }

  public static int cbf_select_datablock(cbf_handle_struct handle, long datablock) {
    return cbfJNI.cbf_select_datablock(cbf_handle_struct.getCPtr(handle), handle, datablock);
  }

  public static int cbf_select_saveframe(cbf_handle_struct handle, long saveframe) {
    return cbfJNI.cbf_select_saveframe(cbf_handle_struct.getCPtr(handle), handle, saveframe);
  }

  public static int cbf_select_category(cbf_handle_struct handle, long category) {
    return cbfJNI.cbf_select_category(cbf_handle_struct.getCPtr(handle), handle, category);
  }

  public static int cbf_select_blockitem(cbf_handle_struct handle, long item, SWIGTYPE_p_CBF_NODETYPE type) {
    return cbfJNI.cbf_select_blockitem(cbf_handle_struct.getCPtr(handle), handle, item, SWIGTYPE_p_CBF_NODETYPE.getCPtr(type));
  }

  public static int cbf_select_column(cbf_handle_struct handle, long column) {
    return cbfJNI.cbf_select_column(cbf_handle_struct.getCPtr(handle), handle, column);
  }

  public static int cbf_select_row(cbf_handle_struct handle, long row) {
    return cbfJNI.cbf_select_row(cbf_handle_struct.getCPtr(handle), handle, row);
  }

  public static int cbf_datablock_name(cbf_handle_struct handle, SWIGTYPE_p_p_char datablockname) {
    return cbfJNI.cbf_datablock_name(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(datablockname));
  }

  public static int cbf_saveframe_name(cbf_handle_struct handle, SWIGTYPE_p_p_char saveframename) {
    return cbfJNI.cbf_saveframe_name(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(saveframename));
  }

  public static int cbf_category_name(cbf_handle_struct handle, SWIGTYPE_p_p_char categoryname) {
    return cbfJNI.cbf_category_name(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(categoryname));
  }

  public static int cbf_column_name(cbf_handle_struct handle, SWIGTYPE_p_p_char columnname) {
    return cbfJNI.cbf_column_name(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(columnname));
  }

  public static int cbf_row_number(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int row) {
    return cbfJNI.cbf_row_number(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(row));
  }

  public static int cbf_column_number(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int column) {
    return cbfJNI.cbf_column_number(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(column));
  }

  public static int cbf_blockitem_number(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int blockitem) {
    return cbfJNI.cbf_blockitem_number(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(blockitem));
  }

  public static int cbf_get_value(cbf_handle_struct handle, SWIGTYPE_p_p_char value) {
    return cbfJNI.cbf_get_value(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(value));
  }

  public static int cbf_set_value(cbf_handle_struct handle, String value) {
    return cbfJNI.cbf_set_value(cbf_handle_struct.getCPtr(handle), handle, value);
  }

  public static int cbf_require_value(cbf_handle_struct handle, SWIGTYPE_p_p_char value, String defaultvalue) {
    return cbfJNI.cbf_require_value(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(value), defaultvalue);
  }

  public static int cbf_get_typeofvalue(cbf_handle_struct handle, SWIGTYPE_p_p_char typeofvalue) {
    return cbfJNI.cbf_get_typeofvalue(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p_char.getCPtr(typeofvalue));
  }

  public static int cbf_set_typeofvalue(cbf_handle_struct handle, String typeofvalue) {
    return cbfJNI.cbf_set_typeofvalue(cbf_handle_struct.getCPtr(handle), handle, typeofvalue);
  }

  public static int cbf_get_integervalue(cbf_handle_struct handle, SWIGTYPE_p_int number) {
    return cbfJNI.cbf_get_integervalue(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_int.getCPtr(number));
  }

  public static int cbf_get_doublevalue(cbf_handle_struct handle, SWIGTYPE_p_double number) {
    return cbfJNI.cbf_get_doublevalue(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_double.getCPtr(number));
  }

  public static int cbf_set_integervalue(cbf_handle_struct handle, int number) {
    return cbfJNI.cbf_set_integervalue(cbf_handle_struct.getCPtr(handle), handle, number);
  }

  public static int cbf_set_doublevalue(cbf_handle_struct handle, String format, double number) {
    return cbfJNI.cbf_set_doublevalue(cbf_handle_struct.getCPtr(handle), handle, format, number);
  }

  public static int cbf_require_integervalue(cbf_handle_struct handle, SWIGTYPE_p_int number, int defaultvalue) {
    return cbfJNI.cbf_require_integervalue(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_int.getCPtr(number), defaultvalue);
  }

  public static int cbf_require_doublevalue(cbf_handle_struct handle, SWIGTYPE_p_double number, double defaultvalue) {
    return cbfJNI.cbf_require_doublevalue(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_double.getCPtr(number), defaultvalue);
  }

  public static int cbf_get_arrayparameters(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_int elsigned, SWIGTYPE_p_int elunsigned, SWIGTYPE_p_size_t nelem, SWIGTYPE_p_int minelem, SWIGTYPE_p_int maxelem, SWIGTYPE_p_int realarray) {
    return cbfJNI.cbf_get_arrayparameters(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_int.getCPtr(elsigned), SWIGTYPE_p_int.getCPtr(elunsigned), SWIGTYPE_p_size_t.getCPtr(nelem), SWIGTYPE_p_int.getCPtr(minelem), SWIGTYPE_p_int.getCPtr(maxelem), SWIGTYPE_p_int.getCPtr(realarray));
  }

  public static int cbf_get_arrayparameters_wdims(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_int elsigned, SWIGTYPE_p_int elunsigned, SWIGTYPE_p_size_t nelem, SWIGTYPE_p_int minelem, SWIGTYPE_p_int maxelem, SWIGTYPE_p_int realarray, SWIGTYPE_p_p_char byteorder, SWIGTYPE_p_size_t dimfast, SWIGTYPE_p_size_t dimmid, SWIGTYPE_p_size_t dimslow, SWIGTYPE_p_size_t padding) {
    return cbfJNI.cbf_get_arrayparameters_wdims(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_int.getCPtr(elsigned), SWIGTYPE_p_int.getCPtr(elunsigned), SWIGTYPE_p_size_t.getCPtr(nelem), SWIGTYPE_p_int.getCPtr(minelem), SWIGTYPE_p_int.getCPtr(maxelem), SWIGTYPE_p_int.getCPtr(realarray), SWIGTYPE_p_p_char.getCPtr(byteorder), SWIGTYPE_p_size_t.getCPtr(dimfast), SWIGTYPE_p_size_t.getCPtr(dimmid), SWIGTYPE_p_size_t.getCPtr(dimslow), SWIGTYPE_p_size_t.getCPtr(padding));
  }

  public static int cbf_get_integerarrayparameters(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_int elsigned, SWIGTYPE_p_int elunsigned, SWIGTYPE_p_size_t nelem, SWIGTYPE_p_int minelem, SWIGTYPE_p_int maxelem) {
    return cbfJNI.cbf_get_integerarrayparameters(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_int.getCPtr(elsigned), SWIGTYPE_p_int.getCPtr(elunsigned), SWIGTYPE_p_size_t.getCPtr(nelem), SWIGTYPE_p_int.getCPtr(minelem), SWIGTYPE_p_int.getCPtr(maxelem));
  }

  public static int cbf_get_integerarrayparameters_wdims(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_int elsigned, SWIGTYPE_p_int elunsigned, SWIGTYPE_p_size_t nelem, SWIGTYPE_p_int minelem, SWIGTYPE_p_int maxelem, SWIGTYPE_p_p_char byteorder, SWIGTYPE_p_size_t dimfast, SWIGTYPE_p_size_t dimmid, SWIGTYPE_p_size_t dimslow, SWIGTYPE_p_size_t padding) {
    return cbfJNI.cbf_get_integerarrayparameters_wdims(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_int.getCPtr(elsigned), SWIGTYPE_p_int.getCPtr(elunsigned), SWIGTYPE_p_size_t.getCPtr(nelem), SWIGTYPE_p_int.getCPtr(minelem), SWIGTYPE_p_int.getCPtr(maxelem), SWIGTYPE_p_p_char.getCPtr(byteorder), SWIGTYPE_p_size_t.getCPtr(dimfast), SWIGTYPE_p_size_t.getCPtr(dimmid), SWIGTYPE_p_size_t.getCPtr(dimslow), SWIGTYPE_p_size_t.getCPtr(padding));
  }

  public static int cbf_get_integerarray(cbf_handle_struct handle, SWIGTYPE_p_int id, SWIGTYPE_p_void value, long elsize, int elsign, long nelem, SWIGTYPE_p_size_t nelem_read) {
    return cbfJNI.cbf_get_integerarray(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_void.getCPtr(value), elsize, elsign, nelem, SWIGTYPE_p_size_t.getCPtr(nelem_read));
  }

  public static int cbf_get_realarray(cbf_handle_struct handle, SWIGTYPE_p_int id, SWIGTYPE_p_void value, long elsize, long nelem, SWIGTYPE_p_size_t nelem_read) {
    return cbfJNI.cbf_get_realarray(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_void.getCPtr(value), elsize, nelem, SWIGTYPE_p_size_t.getCPtr(nelem_read));
  }

  public static int cbf_get_realarrayparameters(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_size_t nelem) {
    return cbfJNI.cbf_get_realarrayparameters(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_size_t.getCPtr(nelem));
  }

  public static int cbf_get_realarrayparameters_wdims(cbf_handle_struct handle, SWIGTYPE_p_unsigned_int compression, SWIGTYPE_p_int id, SWIGTYPE_p_size_t elsize, SWIGTYPE_p_size_t nelem, SWIGTYPE_p_p_char byteorder, SWIGTYPE_p_size_t dimfast, SWIGTYPE_p_size_t dimmid, SWIGTYPE_p_size_t dimslow, SWIGTYPE_p_size_t padding) {
    return cbfJNI.cbf_get_realarrayparameters_wdims(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_unsigned_int.getCPtr(compression), SWIGTYPE_p_int.getCPtr(id), SWIGTYPE_p_size_t.getCPtr(elsize), SWIGTYPE_p_size_t.getCPtr(nelem), SWIGTYPE_p_p_char.getCPtr(byteorder), SWIGTYPE_p_size_t.getCPtr(dimfast), SWIGTYPE_p_size_t.getCPtr(dimmid), SWIGTYPE_p_size_t.getCPtr(dimslow), SWIGTYPE_p_size_t.getCPtr(padding));
  }

  public static int cbf_set_integerarray(cbf_handle_struct handle, long compression, int id, SWIGTYPE_p_void value, long elsize, int elsign, long nelem) {
    return cbfJNI.cbf_set_integerarray(cbf_handle_struct.getCPtr(handle), handle, compression, id, SWIGTYPE_p_void.getCPtr(value), elsize, elsign, nelem);
  }

  public static int cbf_set_integerarray_wdims(cbf_handle_struct handle, long compression, int id, SWIGTYPE_p_void value, long elsize, int elsign, long nelem, String byteorder, long dimfast, long dimmid, long dimslow, long padding) {
    return cbfJNI.cbf_set_integerarray_wdims(cbf_handle_struct.getCPtr(handle), handle, compression, id, SWIGTYPE_p_void.getCPtr(value), elsize, elsign, nelem, byteorder, dimfast, dimmid, dimslow, padding);
  }

  public static int cbf_set_realarray(cbf_handle_struct handle, long compression, int id, SWIGTYPE_p_void value, long elsize, long nelem) {
    return cbfJNI.cbf_set_realarray(cbf_handle_struct.getCPtr(handle), handle, compression, id, SWIGTYPE_p_void.getCPtr(value), elsize, nelem);
  }

  public static int cbf_set_realarray_wdims(cbf_handle_struct handle, long compression, int id, SWIGTYPE_p_void value, long elsize, long nelem, String byteorder, long dimfast, long dimmid, long dimslow, long padding) {
    return cbfJNI.cbf_set_realarray_wdims(cbf_handle_struct.getCPtr(handle), handle, compression, id, SWIGTYPE_p_void.getCPtr(value), elsize, nelem, byteorder, dimfast, dimmid, dimslow, padding);
  }

  public static void cbf_warning(String message) {
    cbfJNI.cbf_warning(message);
  }

  public static void cbf_error(String message) {
    cbfJNI.cbf_error(message);
  }

  public static void cbf_log(cbf_handle_struct handle, String message, int logflags) {
    cbfJNI.cbf_log(cbf_handle_struct.getCPtr(handle), handle, message, logflags);
  }

  public static int cbf_require_datablock(cbf_handle_struct handle, String datablockname) {
    return cbfJNI.cbf_require_datablock(cbf_handle_struct.getCPtr(handle), handle, datablockname);
  }

  public static int cbf_require_category(cbf_handle_struct handle, String categoryname) {
    return cbfJNI.cbf_require_category(cbf_handle_struct.getCPtr(handle), handle, categoryname);
  }

  public static int cbf_require_column(cbf_handle_struct handle, String columnname) {
    return cbfJNI.cbf_require_column(cbf_handle_struct.getCPtr(handle), handle, columnname);
  }

  public static int cbf_require_column_value(cbf_handle_struct handle, String columnname, SWIGTYPE_p_p_char value, String defaultvalue) {
    return cbfJNI.cbf_require_column_value(cbf_handle_struct.getCPtr(handle), handle, columnname, SWIGTYPE_p_p_char.getCPtr(value), defaultvalue);
  }

  public static int cbf_require_column_integervalue(cbf_handle_struct handle, String columnname, SWIGTYPE_p_int number, int defaultvalue) {
    return cbfJNI.cbf_require_column_integervalue(cbf_handle_struct.getCPtr(handle), handle, columnname, SWIGTYPE_p_int.getCPtr(number), defaultvalue);
  }

  public static int cbf_require_column_doublevalue(cbf_handle_struct handle, String columnname, SWIGTYPE_p_double number, double defaultvalue) {
    return cbfJNI.cbf_require_column_doublevalue(cbf_handle_struct.getCPtr(handle), handle, columnname, SWIGTYPE_p_double.getCPtr(number), defaultvalue);
  }

  public static int cbf_get_local_integer_byte_order(SWIGTYPE_p_p_char byte_order) {
    return cbfJNI.cbf_get_local_integer_byte_order(SWIGTYPE_p_p_char.getCPtr(byte_order));
  }

  public static int cbf_get_local_real_byte_order(SWIGTYPE_p_p_char byte_order) {
    return cbfJNI.cbf_get_local_real_byte_order(SWIGTYPE_p_p_char.getCPtr(byte_order));
  }

  public static int cbf_get_local_real_format(SWIGTYPE_p_p_char real_format) {
    return cbfJNI.cbf_get_local_real_format(SWIGTYPE_p_p_char.getCPtr(real_format));
  }

  public static int cbf_get_dictionary(cbf_handle_struct handle, SWIGTYPE_p_p__cbf_handle_struct dictionary) {
    return cbfJNI.cbf_get_dictionary(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p__cbf_handle_struct.getCPtr(dictionary));
  }

  public static int cbf_set_dictionary(cbf_handle_struct handle, cbf_handle_struct dictionary) {
    return cbfJNI.cbf_set_dictionary(cbf_handle_struct.getCPtr(handle), handle, cbf_handle_struct.getCPtr(dictionary), dictionary);
  }

  public static int cbf_require_dictionary(cbf_handle_struct handle, SWIGTYPE_p_p__cbf_handle_struct dictionary) {
    return cbfJNI.cbf_require_dictionary(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_p__cbf_handle_struct.getCPtr(dictionary));
  }

  public static int cbf_set_hashedvalue(cbf_handle_struct handle, String value, String columnname, int valuerow) {
    return cbfJNI.cbf_set_hashedvalue(cbf_handle_struct.getCPtr(handle), handle, value, columnname, valuerow);
  }

  public static int cbf_find_hashedvalue(cbf_handle_struct handle, String value, String columnname, int caseinsensitive) {
    return cbfJNI.cbf_find_hashedvalue(cbf_handle_struct.getCPtr(handle), handle, value, columnname, caseinsensitive);
  }

  public static int cbf_convert_dictionary_definition(cbf_handle_struct cbfdictionary, cbf_handle_struct dictionary, String name) {
    return cbfJNI.cbf_convert_dictionary_definition(cbf_handle_struct.getCPtr(cbfdictionary), cbfdictionary, cbf_handle_struct.getCPtr(dictionary), dictionary, name);
  }

  public static int cbf_increment_column(cbf_handle_struct handle, String columnname, SWIGTYPE_p_int count) {
    return cbfJNI.cbf_increment_column(cbf_handle_struct.getCPtr(handle), handle, columnname, SWIGTYPE_p_int.getCPtr(count));
  }

  public static int cbf_reset_column(cbf_handle_struct handle, String columnname) {
    return cbfJNI.cbf_reset_column(cbf_handle_struct.getCPtr(handle), handle, columnname);
  }

  public static int cbf_reset_refcounts(cbf_handle_struct dictionary) {
    return cbfJNI.cbf_reset_refcounts(cbf_handle_struct.getCPtr(dictionary), dictionary);
  }

  public static int cbf_convert_dictionary(cbf_handle_struct handle, cbf_handle_struct dictionary) {
    return cbfJNI.cbf_convert_dictionary(cbf_handle_struct.getCPtr(handle), handle, cbf_handle_struct.getCPtr(dictionary), dictionary);
  }

  public static int cbf_find_tag(cbf_handle_struct handle, String tag) {
    return cbfJNI.cbf_find_tag(cbf_handle_struct.getCPtr(handle), handle, tag);
  }

  public static int cbf_find_local_tag(cbf_handle_struct handle, String tag) {
    return cbfJNI.cbf_find_local_tag(cbf_handle_struct.getCPtr(handle), handle, tag);
  }

  public static int cbf_srch_tag(cbf_handle_struct handle, SWIGTYPE_p_cbf_node node, String categoryname, String columnname) {
    return cbfJNI.cbf_srch_tag(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_cbf_node.getCPtr(node), categoryname, columnname);
  }

  public static int cbf_find_category_root(cbf_handle_struct handle, String categoryname, SWIGTYPE_p_p_char categoryroot) {
    return cbfJNI.cbf_find_category_root(cbf_handle_struct.getCPtr(handle), handle, categoryname, SWIGTYPE_p_p_char.getCPtr(categoryroot));
  }

  public static int cbf_require_category_root(cbf_handle_struct handle, String categoryname, SWIGTYPE_p_p_char categoryroot) {
    return cbfJNI.cbf_require_category_root(cbf_handle_struct.getCPtr(handle), handle, categoryname, SWIGTYPE_p_p_char.getCPtr(categoryroot));
  }

  public static int cbf_set_category_root(cbf_handle_struct handle, String categoryname, String categoryroot) {
    return cbfJNI.cbf_set_category_root(cbf_handle_struct.getCPtr(handle), handle, categoryname, categoryroot);
  }

  public static int cbf_find_tag_root(cbf_handle_struct handle, String tagname, SWIGTYPE_p_p_char tagroot) {
    return cbfJNI.cbf_find_tag_root(cbf_handle_struct.getCPtr(handle), handle, tagname, SWIGTYPE_p_p_char.getCPtr(tagroot));
  }

  public static int cbf_require_tag_root(cbf_handle_struct handle, String tagname, SWIGTYPE_p_p_char tagroot) {
    return cbfJNI.cbf_require_tag_root(cbf_handle_struct.getCPtr(handle), handle, tagname, SWIGTYPE_p_p_char.getCPtr(tagroot));
  }

  public static int cbf_set_tag_root(cbf_handle_struct handle, String tagname, String tagroot) {
    return cbfJNI.cbf_set_tag_root(cbf_handle_struct.getCPtr(handle), handle, tagname, tagroot);
  }

  public static int cbf_find_tag_category(cbf_handle_struct handle, String tagname, SWIGTYPE_p_p_char categoryname) {
    return cbfJNI.cbf_find_tag_category(cbf_handle_struct.getCPtr(handle), handle, tagname, SWIGTYPE_p_p_char.getCPtr(categoryname));
  }

  public static int cbf_set_tag_category(cbf_handle_struct handle, String tagname, String categoryname) {
    return cbfJNI.cbf_set_tag_category(cbf_handle_struct.getCPtr(handle), handle, tagname, categoryname);
  }

  public static int cbf_validate(cbf_handle_struct handle, SWIGTYPE_p_cbf_node node, SWIGTYPE_p_CBF_NODETYPE type, SWIGTYPE_p_cbf_node catnode) {
    return cbfJNI.cbf_validate(cbf_handle_struct.getCPtr(handle), handle, SWIGTYPE_p_cbf_node.getCPtr(node), SWIGTYPE_p_CBF_NODETYPE.getCPtr(type), SWIGTYPE_p_cbf_node.getCPtr(catnode));
  }

  public static int cbf_mpint_load_acc(SWIGTYPE_p_unsigned_int acc, long acsize, SWIGTYPE_p_void source, long elsize, int elsign, String border) {
    return cbfJNI.cbf_mpint_load_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize, SWIGTYPE_p_void.getCPtr(source), elsize, elsign, border);
  }

  public static int cbf_mpint_store_acc(SWIGTYPE_p_unsigned_int acc, long acsize, SWIGTYPE_p_void dest, long elsize, int elsign, String border) {
    return cbfJNI.cbf_mpint_store_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize, SWIGTYPE_p_void.getCPtr(dest), elsize, elsign, border);
  }

  public static int cbf_mpint_clear_acc(SWIGTYPE_p_unsigned_int acc, long acsize) {
    return cbfJNI.cbf_mpint_clear_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize);
  }

  public static int cbf_mpint_increment_acc(SWIGTYPE_p_unsigned_int acc, long acsize) {
    return cbfJNI.cbf_mpint_increment_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize);
  }

  public static int cbf_mpint_decrement_acc(SWIGTYPE_p_unsigned_int acc, long acsize) {
    return cbfJNI.cbf_mpint_decrement_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize);
  }

  public static int cbf_mpint_negate_acc(SWIGTYPE_p_unsigned_int acc, long acsize) {
    return cbfJNI.cbf_mpint_negate_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize);
  }

  public static int cbf_mpint_add_acc(SWIGTYPE_p_unsigned_int acc, long acsize, SWIGTYPE_p_unsigned_int add, long addsize) {
    return cbfJNI.cbf_mpint_add_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize, SWIGTYPE_p_unsigned_int.getCPtr(add), addsize);
  }

  public static int cbf_mpint_rightshift_acc(SWIGTYPE_p_unsigned_int acc, long acsize, int shift) {
    return cbfJNI.cbf_mpint_rightshift_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize, shift);
  }

  public static int cbf_mpint_leftshift_acc(SWIGTYPE_p_unsigned_int acc, long acsize, int shift) {
    return cbfJNI.cbf_mpint_leftshift_acc(SWIGTYPE_p_unsigned_int.getCPtr(acc), acsize, shift);
  }

  public static int cbf_check_type_contents(String type, String value) {
    return cbfJNI.cbf_check_type_contents(type, value);
  }

  public static int cbf_match(String string, String pattern) {
    return cbfJNI.cbf_match(string, pattern);
  }

  public static SWIGTYPE_p_FILE fopen(String name, String mode) {
    long cPtr = cbfJNI.fopen(name, mode);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FILE(cPtr, false);
  }

  public static void fclose(SWIGTYPE_p_FILE arg0) {
    cbfJNI.fclose(SWIGTYPE_p_FILE.getCPtr(arg0));
  }

}
